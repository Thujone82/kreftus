name: Deploy to iFastNet via Git Push

on:
  push:
    branches:
      - main  # Or whatever branch you want to deploy from

jobs:
  push-to-ifastnet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history so we can push correctly

      - name: Setup SSH Agent for iFastNet
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.IFASTNET }}

      - name: Add iFastNet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 27015 ftp.kreft.us >> ~/.ssh/known_hosts
          # You can be more specific with the host key if you know it, to avoid TOFU (Trust On First Use)
          # For example: echo "kreft.us ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI..." >> ~/.ssh/known_hosts

      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Add iFastNet as a remote
        run: |
          git remote add ifastnet ssh://kreftus@kreft.us:27015/home/kreftus/gitcode

      - name: Push to iFastNet
        run: |
          git push ifastnet main --force
          # Using --force might be necessary if the histories can diverge
          # or if the iFastNet repo is non-bare and its HEAD needs to be overwritten.
          # Use with caution: ensures iFastNet repo matches the GitHub repo state.
          # Alternatively, if you manage history carefully, a regular push might work:
          # git push ifastnet main
          # Or to ensure the local main is pushed to ifastnet's main:
          # git push ifastnet refs/heads/main:refs/heads/main --force
