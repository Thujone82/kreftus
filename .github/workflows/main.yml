name: Deploy to iFastNet via Git Push

on:
  push:
    branches:
      - main

jobs:
  push-to-ifastnet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.9.0 # This starts the agent
        with:
          ssh-private-key: ${{ secrets.IFASTNET }} # This adds the key to the agent

      # The webfactory/ssh-agent action attempts to add the key.
      # If your IFASTNET private key requires a passphrase, this step might
      # need to be modified or ssh-add needs to be invoked in a way it can get the passphrase.
      # The webfactory/ssh-agent action's documentation states:
      # "If the key is passphrase-protected, it will be loaded using `ssh-add <(echo "$SSH_PRIVATE_KEY")`
      # and you must provide the `SSH_AUTH_SOCK` environment variable for it to work."
      # It *should* try to handle the passphrase if it's set on the key.
      # Let's assume for a moment it *might* not handle it, and show an explicit add:

      - name: Add SSH Key to Agent with Passphrase (if needed)
        env:
          SSH_PRIVATE_KEY_CONTENT: ${{ secrets.IFASTNET }}
          SSH_KEY_PASSPHRASE: ${{ secrets.IFASTNET_PASS }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY_CONTENT" > ~/.ssh/id_ifastnet_action
          chmod 600 ~/.ssh/id_ifastnet_action
          # Attempt to add with passphrase. ssh-add typically needs SSH_ASKPASS or a TTY.
          # This is the tricky part in a non-interactive script.
          # Let's try a common method using expect, which needs to be installed.
          sudo apt-get update && sudo apt-get install -y expect
          expect -c "
            spawn ssh-add ~/.ssh/id_ifastnet_action
            expect \"Enter passphrase for ~/.ssh/id_ifastnet_action:\"
            send \"$SSH_KEY_PASSPHRASE\r\"
            expect eof
          "

      - name: Add iFastNet to known_hosts
        run: |
          mkdir -p ~/.ssh
          # Store your actual known_hosts entry in the IFASTNET_KNOWN_HOSTS secret
          echo "${{ secrets.IFASTNET_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          # Fallback/alternative if the secret isn't perfectly formatted:
          # ssh-keyscan -p 27015 kreft.us >> ~/.ssh/known_hosts

      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Add iFastNet as a remote
        run: |
          git remote remove ifastnet || true
          git remote add ifastnet ssh://kreftus@kreft.us:27015/home/kreftus/gitcode

      - name: Push to iFastNet
        run: |
          git push ifastnet main --force
